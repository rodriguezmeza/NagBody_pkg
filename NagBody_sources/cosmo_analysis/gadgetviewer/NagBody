# NagBody install file - gadgetviewer code
# Copyright (c) 2006-2022  Mario A. Rodriguez-Meza, Mexico, D.F.

CODE_NAME = gadgetviewer
PARENT_CODE_NAME = cosmo_analysis

INSTALL_PATH = ../../../..


# configure: error: expected an absolute directory name for --prefix: ../../../../local/openmpi
# Then unpack or clone NagBody where ever you want and make a link to it from $HOME
# ln -s path-to-NagBody_pkg $HOME/NagBody_pkg
# ==================================================================
# NOTE: INSTALATION MUST BE RELATIVE TO $(INSTALL_PATH)
# 	Not absolute as is given by $(HOME)/NagBody_pkg
# 	It is better to use a relative path
#NAGBODYDIR = $(INSTALL_PATH)
NAGBODYDIR = $(HOME)/NagBody_pkg
#
CODEVER = gadgetviewer-1.1.2
CODEPKG = gadgetviewer-1.1.2.tar.gz
CODEVEREX = gadgetviewer-1.1.2

OPTIONS =  --with-hdf5=$(NAGBODYDIR)/local/hdf5

# ==================================================================
# Install $(CODE_NAME) binary

install_all: install

install:
	@echo " "
	@echo "Creating $(CODE_NAME) binary..."
	(tar xvf $(CODEPKG); \
	cd $(CODEVER); \
	cp ../F90_modified_files/additional_data_with-aux-mod.F90 main/src/additional_data.F90 ; \
	./configure --prefix=$(NAGBODYDIR)/local/$(CODE_NAME) $(OPTIONS) 2>&1 | tee configure_$(CODE_NAME).log; \
	make 2>&1 | tee make_$(CODE_NAME).log; \
	make install 2>&1 | tee install_$(CODE_NAME).log)

# Not working:
#	cp ../F90_modified_files/swift_reader_with-hdf5_close-mod.F90 main/src/swift_reader.F90 ; \

# ==================================================================
# Test $(CODE_NAME)

install_test:
	@echo " "
	@echo "Testing $(CODE_NAME)..."
	(cd $(CODEVER); make test)

# ==================================================================
# Clean up $(CODE_NAME) source directory

clean:
	@echo " "
	@echo "Cleaning $(CODE_NAME) source dir, binary and man page files..."
	(cd $(CODEVER); $(MAKE) distclean; \
	rm -fR $(INSTALL_PATH)/local/$(CODE_NAME) )

# ==================================================================
# Archive all source directories.  
#
# If errors about missing files occur, 
# use `make -f NagBody packing_sources SHELL=/bin/csh'

#####################################
#####################################
# PACKING (TAR)
#
PACK_PARENT_DIR = ../../../../
PACK_CODE_NAGBODY_ROOT_DIR = NagBody_pkg
PACK_CODE_DIR = $(PACK_CODE_NAGBODY_ROOT_DIR)/NagBody_sources/$(PARENT_CODE_NAME)/$(CODE_NAME)
PACK_ZIP_DIR = $(PACK_CODE_NAGBODY_ROOT_DIR)/zip

#####################################
packing_sources:
	@echo " "
	@echo "Packing $(CODE_NAME) sources..."
	@echo " "
	(cd $(PACK_PARENT_DIR); tar cvf $(PACK_ZIP_DIR)/$(CODE_NAME).tar \
		$(PACK_CODE_DIR)/F90_modified_files \
		$(PACK_CODE_DIR)/$(CODEPKG) \
		$(PACK_CODE_DIR)/doc \
		$(PACK_CODE_DIR)/NagBody \
		$(PACK_CODE_DIR)/Readme.txt \
		$(PACK_CODE_DIR)/tests \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/doc \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/env_config/nagbodyrc.sh \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/INSTALL \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/LICENSE \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/make_all \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/NagBody \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/README.md \
		$(PACK_CODE_NAGBODY_ROOT_DIR)/tests; \
	 gzip $(PACK_ZIP_DIR)/$(CODE_NAME).tar )

#####################################
#####################################
# PACKING (TAR) (INDEPENDENT of NagBody)
#
PACK_NAGBODY_DIR = ../..
PACK_ZIP_NO_NAGBODY_DIR = $(PACK_NAGBODY_DIR)/zip

#####################################
packing_sources_no_nagbody:
	@echo " "
	@echo "Packing $(CODE_NAME) sources no NagBody..."
	@echo " "
	(cd ../; tar cvf $(PACK_ZIP_NO_NAGBODY_DIR)/$(CODE_NAME).tar \
		$(CODE_NAME)/F90_modified_files \
		$(CODE_NAME)/doc \
		$(CODE_NAME)/Readme.txt \
		$(CODE_NAME)/$(CODEPKG) \
		$(CODE_NAME)/tests; \
	 gzip $(PACK_ZIP_NO_NAGBODY_DIR)/$(CODE_NAME).tar )

