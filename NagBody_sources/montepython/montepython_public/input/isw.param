#------Experiments to test (separated with commas)-----
# To see all the available ones, please look in the
# montepython/likelihoods folder. Every folder there is a valid likelihood to
# test.
data.experiments=['ISW']

#------ Parameter list -------
# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'


# Cosmological parameters list
data.parameters['omega_cdm']    = [0.1,  0.08,  0.15,   0.0016,    1,   'cosmo']

data.cosmo_arguments['omega_b']=0.02225
data.cosmo_arguments['n_s']=0.9645
data.cosmo_arguments['A_s']=2.207e-9
data.cosmo_arguments['h']=0.6727
data.cosmo_arguments['tau_reio']=0.079

data.parameters['omega_m'] = [0,       -1, -1, 0,1,  'derived']

# Nuisance parameter list, same call, except the name does not have to be a class name
data.parameters['A_ISW']        = [1,      0.85,   2.3,      0.5, 1,  'nuisance']
data.parameters['b0_sdss']      = [1.1,   0.9,   1.4,      0.5, 1,    'nuisance']
data.parameters['b1_sdss']      = [0.9,   0.7,   1.05,      0.5, 1,    'nuisance']
data.parameters['b2_sdss']      = [0.8,   0.6,   0.95,      0.5, 1,    'nuisance']
data.parameters['b3_sdss']      = [1.2,   0.85,   1.3,      0.5, 1,    'nuisance']
data.parameters['b4_sdss']      = [1.15,   0.7,   1.3,      0.5, 1,    'nuisance']
data.parameters['b0_qso']   = [1.40,   0.6,   1.8,      1, 1,    'nuisance']
data.parameters['b1_qso']   = [2.6,   1,   2.6,      1, 1,    'nuisance']
data.parameters['b2_qso']   = [3.35,   1.7,   3.6,      1, 1,    'nuisance']
data.parameters['b0_mpz']       = [1.3,   1.2,   1.8,      0.5, 1,    'nuisance']
data.parameters['b1_mpz']       = [1.3,   1.1,   1.7,      0.5, 1,    'nuisance']
data.parameters['b2_mpz']       = [1.8,   1.5,   2.3,      0.5, 1,    'nuisance']
data.parameters['b0_wisc']      = [1,   0.8,   1.3,      0.5, 1,    'nuisance']
data.parameters['b1_wisc']      = [0.85,   0.65,   1.1,      0.5, 1,    'nuisance']
data.parameters['b2_wisc']      = [1.02,   0.8,   1.2,      0.5, 1,    'nuisance']
data.parameters['b0_nvss']      = [2,      1.9,   3,      2, 1,    'nuisance']


#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
